#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
–ó–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏!
"""

import os
from dotenv import load_dotenv
from registration import is_registered, get_teacher_name_by_id
from google_sheets import get_admin_sheet, get_teacher_sheet, create_teacher_sheet

def test_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    load_dotenv()
    
    required_vars = [
        'BOT_TOKEN',
        'AUTHORIZED_CHAT_ID', 
        'GOOGLE_CREDENTIALS_JSON',
        'SPREADSHEET_ID'
    ]
    
    missing_vars = []
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        return False
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    return True

def test_google_sheets_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets"""
    try:
        admin_sheet = get_admin_sheet()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
        return False

def test_admin_sheet_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∞–¥–º–∏–Ω—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã"""
    try:
        sheet = get_admin_sheet()
        headers = sheet.row_values(3)
        required_headers = ["–§–ò–û", "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", "–¢–µ–ª–µ–≥—Ä–∞–º–º id", "Username", "–ü—Ä–µ–¥–º–µ—Ç", "–ö–ª–∞—Å—Å—ã", "–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"]
        
        missing_headers = []
        for header in required_headers:
            if header not in headers:
                missing_headers.append(header)
        
        if missing_headers:
            print(f"‚ùå –í —Ç–∞–±–ª–∏—Ü–µ '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏' –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏: {', '.join(missing_headers)}")
            return False
        
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–¥–º–∏–Ω—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã: {e}")
        return False

def test_template_sheet():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞"""
    try:
        from config import TEMPLATE_SHEET_NAME
        import gspread
        from oauth2client.service_account import ServiceAccountCredentials
        
        scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
        creds = ServiceAccountCredentials.from_json_keyfile_name(
            os.getenv("GOOGLE_CREDENTIALS_JSON"), scope
        )
        client = gspread.authorize(creds)
        spreadsheet = client.open_by_key(os.getenv("SPREADSHEET_ID"))
        
        try:
            template = spreadsheet.worksheet(TEMPLATE_SHEET_NAME)
            print("‚úÖ –®–∞–±–ª–æ–Ω–Ω—ã–π –ª–∏—Å—Ç –Ω–∞–π–¥–µ–Ω")
            return True
        except gspread.exceptions.WorksheetNotFound:
            print(f"‚ùå –õ–∏—Å—Ç '{TEMPLATE_SHEET_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞: {e}")
        return False

def test_bot_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –±–æ—Ç–∞ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)"""
    try:
        from bot import start_registration, get_fio, get_phone, get_subject, get_classes
        from lessons import process_lesson_message
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –æ –∑–∞–Ω—è—Ç–∏—è—Ö
        test_message = "–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä 5 –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ / —Ö–æ—Ä–æ—à–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª—Å—è"
        result = process_lesson_message("–¢–µ—Å—Ç–æ–≤—ã–π –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", test_message)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä—Å–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç (–¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω)
        if "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç" not in result:
            print("‚úÖ –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–Ω—è—Ç–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–Ω—è—Ç–∏–π: {result}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ –±–æ—Ç–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞...\n")
    
    tests = [
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", test_config),
        ("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets", test_google_sheets_connection),
        ("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–¥–º–∏–Ω—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã", test_admin_sheet_structure),
        ("–®–∞–±–ª–æ–Ω–Ω—ã–π –ª–∏—Å—Ç", test_template_sheet),
        ("–õ–æ–≥–∏–∫–∞ –±–æ—Ç–∞", test_bot_logic),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"üîç –¢–µ—Å—Ç: {test_name}")
        if test_func():
            passed += 1
        print()
    
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")

if __name__ == "__main__":
    main() 